
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<canvas width="960" height="600"></canvas>


@section scripts {
    <script type="text/javascript">

        var canvas = document.querySelector("canvas");
        var context = canvas.getContext("2d");
        var width = +canvas.width;
        var height = +canvas.height;

        //var color = d3.scaleOrdinal(d3.schemeCategory20);


        var force;
        var graph;

        function showGraph() {
            var simulation = d3.forceSimulation()
                    .force("link", d3.forceLink().id(function (d) { return d.id; }))
                    .force("charge", d3.forceManyBody())
                    .force("center", d3.forceCenter(width / 2, height / 2));
            simulation.nodes(graph.nodes).on('tick', ticked);
            simulation.force('link').links(graph.links);

            function ticked() {
                context.clearRect(0, 0, width, height);
                context.save();
                context.translate(width / 2, height / 2 + 40);

                context.beginPath();
                graph.links.forEach(drawLink);
                context.strokeStyle = "#aaa";
                context.stroke();

                context.beginPath();
                graph.nodes.forEach(drawNode);
                context.fill();
                context.strokeStyle = "#fff";
                context.stroke();

                context.restore();
            }
        }

        function drawLink(d) {
            context.moveTo(d.source.x, d.source.y);
            context.lineTo(d.target.x, d.target.y);
        }

        function drawNode(d) {
            context.moveTo(d.x + 3, d.y);
            context.arc(d.x, d.y, 3, 0, 2 * Math.PI);
        }

        $.getJSON("/api/graph", null, function (adjlist) {
            graph = adjacencyToNodeLinks(adjlist);
            showGraph();
        });


    </script>
}